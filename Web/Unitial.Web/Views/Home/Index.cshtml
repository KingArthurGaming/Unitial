@model UsersProfileViewModel
@{
    this.ViewData["Title"] = "Home Page";
}

<div class="page-header header-filter" data-parallax="true"></div>
<div class="main main-raised">
    <div class="profile-content">
        <div class="container">
            <div class="row">
                <div class="col-md-4 ml-auto mr-auto">
                    <div class="profile">
                        <div class="avatar">
                            <img width="200" height="200" style="width:60%; margin-top:-100px; margin-left:75px; border-radius:50%;box-shadow: 0 4px 20px 0 rgba(0,0,0,.14), 0 7px 10px -5px rgb(0, 0, 0); " src="@Model.ImageUrl"
                                 alt="Circle Image" class=" centered-and-cropped">
                        </div>


                        <div class="name">
                            <h1 style="font-size:40px; text-align: center; margin-top: 20px;margin-bottom: 20px; font-weight:500 "> @Model.FirstName@Model.LastName </h1>
                        </div>
                    </div>
                </div>
            </div>
            <div class="description text-center">
                <h2>
                    @Model.Description
                </h2>
            </div>


            @{Html.RenderPartial("_PostCreatePartial"); }



            <section class="hero">

                @if (@Model.PostsViewModels.Count > 0)
                {
                    foreach (PostViewModel item in Model.PostsViewModels)
                    {


                        Html.RenderPartial("_PostPartial", item);
                    }
                }
                else
                {
                    <h3 style="text-align:center">
                        We have no posts yet.
                        Follow other people and have fun!
                    </h3>
                }


            </section>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>

<script>
    var accItem = document.getElementsByClassName('accordionItem');
    var accHD = document.getElementsByClassName('accordionItemHeading');
    for (i = 0; i < accHD.length; i++) {
        accHD[i].addEventListener('click', toggleItem, false);
    }
    function toggleItem() {
        var itemClass = this.parentNode.className;
        for (i = 0; i < accItem.length; i++) {
            accItem[i].className = 'accordionItem close';
        }
        if (itemClass == 'accordionItem close') {
            this.parentNode.className = 'accordionItem open';
        }
    }
</script>

<script>
    $(".custom-file-input").on("change", function () {
        var fileName = $(this).val().split("\\").pop();
        $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
    });
</script>